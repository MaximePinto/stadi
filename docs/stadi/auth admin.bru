meta {
  name: auth admin
  type: http
  seq: 1
}

post {
  url: http://stadi.ddev.site/api/login
  body: json
  auth: none
}

body:json {
  {
    "email": "admin@admin.com",
    "password": "admin"
  }
}

script:post-response {
  // Script de debug complet
  console.log("=== DEBUG START ===");
  console.log("Response Code:", res.getStatus());
  
  // Vérifier tous les headers
  console.log("All Response Headers:", res.getHeaders().toObject());
  
  // Vérifier spécifiquement set-cookie
  var setCookieHeader = res.getHeader("set-cookie");
  console.log("Set-Cookie Header:", setCookieHeader);
  
  if (res.getStatus() === 204) {
      if (setCookieHeader && setCookieHeader.includes("jwt=")) {
          // Extraire le JWT
          var jwtMatch = setCookieHeader.match(/jwt=([^;]+)/);
          console.log("JWT Match:", jwtMatch);
          
          if (jwtMatch && jwtMatch[1]) {
              var jwt = jwtMatch[1];
              console.log("JWT extrait (50 premiers chars):", jwt.substring(0, 50));
              console.log("JWT complet length:", jwt.length);
              
              // Essayer différentes méthodes de sauvegarde
              try {
                  // Méthode 1: Variables de collection
                  bru.setVar("jwt_token", jwt);
                  bru.setVar("jwt_cookie", "jwt=" + jwt);
                  console.log("✅ Variables de collection créées");
                  
                  // Méthode 2: Variables globales (backup)
                  bru.setGlobalEnvVar("jwt_token", jwt);
                  bru.setGlobalEnvVar("jwt_cookie", "jwt=" + jwt);
                  console.log("✅ Variables globales créées");
                  
                  // Vérifier que ça a marché
                  console.log("Test lecture collection:", bru.getVar("jwt_token") ? "OK" : "FAILED");
                  console.log("Test lecture global:", bru.getGlobalEnvVar("jwt_token") ? "OK" : "FAILED");
                  
              } catch (error) {
                  console.log("❌ Erreur sauvegarde:", error);
              }
          } else {
              console.log("❌ Pas de JWT trouvé dans le match");
          }
      } else {
          console.log("❌ Pas de JWT dans set-cookie header");
      }
  } else {
      console.log("❌ Code de réponse incorrect");
  }
  
  console.log("=== DEBUG END ===");
}
